{"version":3,"sources":["components/Avatar.js","components/Words.js","components/Row.js","containers/InfiniteScroll.js","containers/useLoadMore.js","containers/App.js","index.js"],"names":["Avatar","owner","avatar_url","login","className","alt","src","Words","data","description","open_issues_count","name","html_url","stargazers_count","created_at","dateDifference","Math","floor","Date","href","RowList","InfiniteScroll","useState","page","setPage","loading","setLoading","error","setError","metaData","setMetaData","reachedFinalPage","setReachedFinalPage","useEffect","date","getDateFromThirtyDays","fetch","then","response","status","json","items","oldDataItems","catch","err","today","setDate","getDate","dd","String","padStart","mm","getMonth","getFullYear","useLoadMore","observer","useRef","lastRepoElementRef","useCallback","element","current","disconnect","IntersectionObserver","entries","isIntersecting","oldPage","observe","rows","map","item","index","length","Row","ref","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ea80f9.chunk.js","sourcesContent":["import React from 'react';\r\n// import './Avatar.css';\r\n\r\nfunction Avatar({owner}){\r\n    const {avatar_url, login} = owner;\r\n    return(\r\n        <div className=\"dtc pa3 v-mid h-mid\">\r\n            <img \r\n            alt={login}\r\n            src={avatar_url} \r\n            className = \"br4 h-100 avatar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\n// import './Words.css';\r\n\r\n\r\nfunction Words({data,owner}){\r\n    const {description, open_issues_count, name, html_url, stargazers_count,created_at} = data;\r\n\r\n    const dayInMilliseconds = 60*60*24*1000;\r\n    const dateDifference = Math.floor((new Date() - new Date(created_at))/ dayInMilliseconds);\r\n\r\n    return(\r\n        <div className=\"dtc v-top pl3-ns pa1 w-80-ns w-70 w-90-l\">\r\n            <h1 className=\"lh-copy mv0 v-top f1-ns f4\">\r\n                <a className='dark-gray' href={html_url}>{name}</a>\r\n            </h1>\r\n            <h2 className='f4-ns f6 ma2-ns ma2'>{description}</h2>\r\n            <div className='dib mt2 mt3-ns'>\r\n                <p className='ba bw1 pa1 mv2-ns ma1 di f5 br2'>{`Stars: ${stargazers_count}`}</p>\r\n                <p className='ba bw1 pa1 mv2-ns ma1 di f5 br2'>{`Issues: ${open_issues_count}`}</p>\r\n            </div>\r\n            <div className='dib'> \r\n                <p className='pa1 f5-ns f7'>\r\n                    <span>{`Submitted ${dateDifference} days ago by `}</span>\r\n                    <a href={owner.html_url}>{owner.login}</a>               \r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Words;","import React from 'react';\r\nimport Avatar from'./Avatar';\r\nimport Words from './Words';\r\n// import './Row.css';\r\n\r\nfunction RowList({data,owner}){\r\n    return(\r\n        <div className=\"dt pv2 pv2-m pv2-ns w-95 bg-light-gray br4 shadow-3 ma3 grow\">\r\n            <Avatar owner={owner} />\r\n            <Words data={data} owner={owner}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowList;","import React, { useState, useRef, useCallback } from 'react';\r\nimport Row from '../components/Row';\r\nimport useLoadMore from './useLoadMore';\r\n\r\nconst InfiniteScroll = () => {\r\n    // const [metaData, setMetaData] = useState([]); \r\n    // tracking on which page we currently are\r\n    const [page, setPage] = useState(1);\r\n    const { loading, error, metaData, reachedFinalPage } = useLoadMore(page)\r\n    // add loader refrence \r\n    const observer = useRef(null);\r\n    const lastRepoElementRef = useCallback(element => {\r\n        if (loading) return\r\n        if (observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting &&!reachedFinalPage) {\r\n                setPage(oldPage => oldPage + 1)\r\n            }\r\n        })\r\n        if (element) observer.current.observe(element)\r\n    }, [loading,reachedFinalPage])\r\n\r\n    const rows = metaData.map((item,index) => {\r\n        if (metaData.length === index+1) {\r\n            return (\r\n                <div key={item.id}>\r\n                    <Row data={item} owner={item.owner} />\r\n                    <h1 className='f2 gray tc' ref={lastRepoElementRef}>Loading More...</h1>\r\n                    <h2> {error && 'ERROR!!'} </h2>\r\n                </div>\r\n            )\r\n        }\r\n        return <Row key={item.id} data={item} owner={item.owner} />\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {rows}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfiniteScroll;","import { useEffect, useState } from 'react';\r\n\r\nexport default function useLoadMore(page) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [metaData, setMetaData] = useState([]); \r\n    const [reachedFinalPage, setReachedFinalPage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        // here we simulate adding new posts to List\r\n        const date = getDateFromThirtyDays();\r\n        fetch(`https://api.github.com/search/repositories?q=created:%3E${date}&sort=stars&order=desc&page=${page}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    return response.json()\r\n                }\r\n                if (response.status === 403) {\r\n                    setReachedFinalPage(true);\r\n                    return {\r\n                        items: 'Reach API request limits' \r\n                    }\r\n                }\r\n            })\r\n            .then((data) => setMetaData(oldDataItems => {\r\n                return [...oldDataItems, ...data.items]\r\n            }))\r\n            .then(() =>{\r\n                if (page > 33) {\r\n                    setReachedFinalPage(true);\r\n                }\r\n            })\r\n            .then(setLoading(false))\r\n            .catch(err=>setError(true));\r\n    },[page])\r\n\r\n    const getDateFromThirtyDays = ()=>{\r\n        const today = new Date();\r\n        today.setDate(today.getDate()-30);\r\n        const dd = String(today.getDate()).padStart(2, '0');\r\n        const mm = String(today.getMonth()+1).padStart(2, '0'); \r\n        const yyyy = today.getFullYear();\r\n        const thirtyDaysAgo = yyyy+'-'+mm+'-'+dd;\r\n        return thirtyDaysAgo;\r\n    }\r\n\r\n    return {loading, error, metaData, reachedFinalPage}\r\n}","import React from 'react';\r\nimport InfiniteScroll from './InfiniteScroll';\r\n\r\n\r\nfunction App() {\r\n    \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <InfiniteScroll />\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}